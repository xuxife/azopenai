//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azopenai

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	credential azcore.TokenCredential
	options    *arm.ClientOptions
	endpoint   string
	apiKey     string
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - endpoint - the endpoint to request.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewClientFactory(endpoint string, credential azcore.TokenCredential, options *arm.ClientOptions) (*ClientFactory, error) {
	_, err := arm.NewClient(moduleName+".ClientFactory", moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	return &ClientFactory{
		endpoint:   endpoint,
		credential: credential,
		options:    options.Clone(),
	}, nil
}

// NewClientFactoryFromAPIKey creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - endpoint - the endpoint to request.
//   - apiKey - used to authorize requests.
func NewClientFactoryFromAPIKey(endpoint string, apiKey string) (*ClientFactory, error) {
	return &ClientFactory{
		endpoint: endpoint,
		apiKey:   apiKey,
	}, nil
}

func (c *ClientFactory) NewCompletionsClient() *CompletionsClient {
	if c.apiKey != "" {
		subClient, _ := NewCompletionsClientFromAPIKey(c.endpoint, c.apiKey, &c.options.ClientOptions)
		return subClient
	}
	subClient, _ := NewCompletionsClient(c.endpoint, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewEmbeddingsClient() *EmbeddingsClient {
	if c.apiKey != "" {
		subClient, _ := NewEmbeddingsClientFromAPIKey(c.endpoint, c.apiKey, &c.options.ClientOptions)
		return subClient
	}
	subClient, _ := NewEmbeddingsClient(c.endpoint, c.credential, c.options)
	return subClient
}

func (c *ClientFactory) NewChatCompletionsClient() *ChatCompletionsClient {
	if c.apiKey != "" {
		subClient, _ := NewChatCompletionsClientFromAPIKey(c.endpoint, c.apiKey, &c.options.ClientOptions)
		return subClient
	}
	subClient, _ := NewChatCompletionsClient(c.endpoint, c.credential, c.options)
	return subClient
}
